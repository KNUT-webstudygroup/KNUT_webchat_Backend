// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
generator kysely {
    provider = "prisma-kysely"
    // 타입이 생성될 디렉토리
    output = "../src/db"
    // 타입이 생성될 파일명
    fileName = "types.ts"
    // Optionally generate runtime enums to a separate file
    enumFileName = "enums.ts"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"

}

model User {
  // 사용자 정보
  id       Int     @id @default(autoincrement()) // 기본 키로 지정
  loginId  String
  pw       String  
  email    String
  phone    String? @db.VarChar(32)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt // 업데이트 시 자동으로 현재 시간으로 갱신

  @@map("USERS") //  DB의 USERS 테이블과 매핑
}

model UserGroup{
  userid  Int
  groupId Int
  @@id([userid,groupId])
  @@index([userid])
  @@index([groupId])
}

model Group{
  // 그룹 정보
  id Int @id @default(autoincrement())
  name String
  desc String // 그룹 소개
  tag String // 그룹 관심사
  admin Int // 그룹 관리자 id
  capacity Int // 그룹 최대 인원수
  total Int // 그룹 현재 인원수

  CreatedAt DateTime @default(now())
  //groupProfile GroupProfile?
  messages Message[]

  //@@unique([name, desc])
  @@map("GROUPS")
}

// GroupProfile 테이블 생성 작업은 일단 보류...
// model GroupProfile{
//   // 그룹 정보 개요
//   id Int @id @default(autoincrement())
//   name String
//   desc String

//   group Group @relation(fields: [name, desc], references: [name, desc])

//   @@unique([name, desc])
//   @@map("GROUPPROFILES")
// }

model Message{
  // 메시지 정보
  id Int @id @default(autoincrement())
  content String
  sender Int
  group Group @relation(fields: [groupId], references: [id])
  groupId Int
  
  CreatedAt DateTime @default(now())

  @@map("MESSAGES")
}

model AccountFindQuest{
  loginId  String
  email       String
  questindex  Int
  quest       String
  answer      String
  @@id([email, questindex])
  @@index([email, questindex])
}
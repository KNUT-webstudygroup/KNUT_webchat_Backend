// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
generator kysely {
    provider = "prisma-kysely"
    // 타입이 생성될 디렉토리
    output = "../src/db"
    // 타입이 생성될 파일명
    fileName = "types.ts"
    // Optionally generate runtime enums to a separate file
    enumFileName = "enums.ts"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"

}

model User {
  // 사용자 정보
  id       Int     @id @default(autoincrement())
  loginId  String
  pw       String  
  phone    String? @db.VarChar(32)
  email    String
  AccountFindQuests AccountFindQuest[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("USERS")
}


model AccountFindQuest{
  userId      Int
  user        User @relation(fields: [userId], references: [id] ,onDelete: Cascade)
  // 유저는 1 : 질문은 N이므로. 회원이 삭제되면 질문도 삭제되어야 하므로. 
  loginId  String
  email       String
  questindex  Int
  quest       String
  answer      String
  @@id([userId, questindex])
  @@index([userId, questindex])
}